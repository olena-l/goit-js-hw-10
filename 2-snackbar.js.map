{"version":3,"file":"2-snackbar.js","sources":["../src/js/2-snackbar.js"],"sourcesContent":["import iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nconst fulfilledBtn = document.querySelector(\n  'input[name=\"state\"][value=\"fulfilled\"]'\n);\nconst rejectedBtn = document.querySelector(\n  'input[name=\"state\"][value=\"rejected\"]'\n);\n\nconst inputDelay = document.querySelector('input[name=\"delay\"]');\n\nconst assessPromise = delay => {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (fulfilledBtn.checked) {\n        resolve(delay);\n      } else if (rejectedBtn.checked) {\n        reject(delay);\n      }\n    }, delay);\n  });\n};\n\ndocument.querySelector('.form').addEventListener('submit', event => {\n  event.preventDefault();\n  const delay = parseInt(inputDelay.value);\n  assessPromise(delay)\n    .then(result => {\n      iziToast.success({\n        title: '',\n        message: `✅ Fulfilled promise in ${result} ms`,\n        position: 'topRight',\n      });\n    })\n    .catch(error => {\n      iziToast.error({\n        title: '',\n        message: `❌ Rejected promise in ${error} ms`,\n        position: 'topRight',\n      });\n    });\n});\n"],"names":["fulfilledBtn","rejectedBtn","inputDelay","assessPromise","delay","resolve","reject","event","result","iziToast","error"],"mappings":"mIAGA,MAAMA,EAAe,SAAS,cAC5B,wCACF,EACMC,EAAc,SAAS,cAC3B,uCACF,EAEMC,EAAa,SAAS,cAAc,qBAAqB,EAEzDC,EAAgBC,GACb,IAAI,QAAQ,CAACC,EAASC,IAAW,CACtC,WAAW,IAAM,CACXN,EAAa,QACfK,EAAQD,CAAK,EACJH,EAAY,SACrBK,EAAOF,CAAK,CAEf,EAAEA,CAAK,CACZ,CAAG,EAGH,SAAS,cAAc,OAAO,EAAE,iBAAiB,SAAUG,GAAS,CAClEA,EAAM,eAAc,EACpB,MAAMH,EAAQ,SAASF,EAAW,KAAK,EACvCC,EAAcC,CAAK,EAChB,KAAKI,GAAU,CACdC,EAAS,QAAQ,CACf,MAAO,GACP,QAAS,0BAA0BD,CAAM,MACzC,SAAU,UAClB,CAAO,CACP,CAAK,EACA,MAAME,GAAS,CACdD,EAAS,MAAM,CACb,MAAO,GACP,QAAS,yBAAyBC,CAAK,MACvC,SAAU,UAClB,CAAO,CACP,CAAK,CACL,CAAC"}